# Define persistent storage for Prometheus (PVC)
#prometheus:
#  prometheusSpec:
#    storageSpec:
#      volumeClaimTemplate:
#        spec:
#          accessModes: ["ReadWriteOnce"]
#          storageClassName: do-block-storage
#          resources:
#            requests:
#              storage: 5Gi

# Define persistent storage for Grafana (PVC)
grafana:
  # Set password for Grafana admin user
  adminPassword: ""
#  persistence:
#    enabled: true
#    storageClassName: do-block-storage
#    accessModes: ["ReadWriteOnce"]
#    size: 5Gi

# Define persistent storage for Alertmanager (PVC)
alertmanager:
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: '<slack-url>'
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
      # A default receiver
      receiver: slack
      routes:
      - match:
          severity: critical
        receiver: slack
      - match: 
          severity: warning
        receiver: slack
      - match:
          alertname: Watchdog
        receiver: slack
    receivers:
    - name: slack
      slack_configs:
        - send_resolved: true
          channel: '#golb_alerts'
          text: " \nsummary: {{ .CommonAnnotations.summary }}\ndescription: {{ .CommonAnnotations.description }}"
#   alertmanagerSpec:
#     storage:
#       volumeClaimTemplate:
#         spec:
#           accessModes: ["ReadWriteOnce"]
#           storageClassName: do-block-storage
#           resources:
#             requests:
#               storage: 5Gi

# Change default node-exporter port
#prometheus-node-exporter:
#  service:
#    port: 30206
#    targetPort: 30206

# Disable Etcd metrics
kubeEtcd:
  enabled: false

# Disable Controller metrics
kubeControllerManager:
  enabled: false

# Disable Scheduler metrics
kubeScheduler:
  enabled: false